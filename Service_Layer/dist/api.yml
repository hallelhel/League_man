openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  version: 1.0.0
paths:
  /register: #update
   post:
      tags: 
        - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        description: Inventory item to add      
      responses:
        '201':
          description: A new user has been added
        '409':
          description: user name already exist
          
  /login:
    post:
      tags:
      - Auth
      summary: Logs user into the system
      description: The details user insert verified with the server
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/Json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
              
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  properties:
                    username:
                      type: string
                    firstname:
                      type: string
                    email:
                      type: string
                      format: email
        '400':
          description: Invalid username/password supplied
        '401':
          description: Authentication failed
        
          
  /logout:
    post:
      tags:
      - Auth
      summary: Logs out current logged in user session
      responses:
        '200':
          description: "the user has been successfully logged out"
  
  /user/favoriteTeams:
    get:
      tags:
      - user
      summary: all teams show
      description: can only be done by the logged in user.
      operationId: showFavoritiesTeams
      # parameters: 
      # - name: FavoritiesTeamsId
      #   in: query
      #   description: id for get all favorities teams
      #   required: true
      #   schema:
      #     type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref : '#/components/schemas/Team'
        '400':
          description: invalid input
          
    post:
      tags:
      - user
      summary: team added to favorities
      description: can only be done by the logged in user.
      operationId: addNewTeamToFavorities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: string
                  description: team id which the user saved
                  example: 939
        description: Inventory item to add      
      responses:
        '201':
          description: A new team has been added to favorities
        '409':
          description: this team is aleady exist in yours favorites  
        '400':
          description: wrong input parameters
          
  /user/favoritePlayers:
    get:
      tags:
      - user
      - player
      summary: return the favorite players were saved by user
      description: can only be done by the logged in user.
      operationId: showFavoritiesPlayers
      # parameters: 
      # - name: FavoritiesPlayersId
      #   in: query
      #   description: id for get all favorities players
      #   required: true
      #   schema:
      #     type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref : '#/components/schemas/Player'
        '400':
          description: invalid input  
    post:
      tags:
      - user
      - player
      summary: player added to favorities
      description: can only be done by the logged in user.
      operationId: addNewPlayerToFavorities
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playerId:
                  type: string
                  description: player id which the user saved
                  example: 85
      responses:
        '201':
          description: A new Player has been added to favorities
        '400':
          description: wrong input parameters 
        '401':
          description: user is not authrized   
          
  /user/favoriteGames:
    get:
      tags:
      - user
      summary: all games show
      description: can only be done by the logged in user.
      operationId: showFavoritiesGamess
      # parameters: 
      # - name: FavoritiesGamesId
      #   in: query
      #   description: id for get all favorities games
      #   required: true
      #   schema:
      #     type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref : '#/components/schemas/Game'
        '400':
          description: invalid input 
    post:
      tags:
      - user
      summary: game added to favorities
      description: can only be done by the logged in user.
      operationId: addNewGameToFavorities
      requestBody:
        # required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameId:
                  type: string
                  description: Inventory item to add
                  example: 3  
      responses:
        '201':
          description: A new Game has been added to favorities
        '400':
          description: wrong input parameters         
    
    delete:
      tags:
        - user
      summary: game removed from favorities
      description: can only be done by the logged in user.
      operationId: removeGameFromFavorities
      parameters:
      - name: gameID
        in: query
        description: game's id to remove
        required: true
        schema:
          type: string
      responses:
        '200':
          description:  Game removed successfully
        '400':
          description: wrong input parameters 
  
  /league/leagueDetails:
    get:
      tags:
      - league
      summary:  league details show on screeen
      description: all users can watch details
      # operationId: leagueDetails
      # parameters:
      # - name: idLeague
      #   in: query 
      #   description: id of league to show
      #   required: true
      #   schema:
      #     type: string     
      responses:
        '200' : 
          description: league details to show
          content:
            application/json:
              schema:
                type: array   
                items:
                  $ref: '#/components/schemas/LeagueItems'
        '400':
          description: wrong input parameters
          
  ##search player        
  /Player/basicInfo/{playerId}:
    get:
      tags:
      - player
      summary: player details show on screen
      description: all users can watch details
      operationId: PlayerDetails
      parameters:
      - name: playerID
        in: path
        description: id for get player's basic details
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/Player'
        '400':
          description: invalid input 
  
  ##self page of player
  /Player/fullInfo/{playerId}:
    get:
      tags:
      - player
      summary: player full details show on screen
      description: all users can watch details
      operationId: PlayerFullDetails
      parameters:
      - in: path
        name: playerId
        description: id for get player's full details
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/PlayerFullInfo'
        '400':
          description: invalid input         
 
  /Player/basicInfo/{playerName}:
    get:
      tags:
      - player
      summary: player details show on screen
      description: all users can watch details
      # operationId: PlayerDetails
      parameters:
      - name: playerName
        in: path
        description: name for get player's basic details
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/Player'
        '204':
          description: No Content         
        '400':
          description: invalid input

  /Player/basicInfoByTeam/{playerName}/{teamName}:
    get:
        tags:
        - player
        summary: player details show on screen
        description: all users can watch details
        # operationId: PlayerDetails
        parameters:
        - name: playerName
          in: path
          description: name for get player's basic details
          required: true
          schema:
            type: string
        - name: teamName
          in: path
          description: name of team 
          required: true
          schema:
            type: string    
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref : '#/components/schemas/Player'
          '204':
            description: No Content         
          '400':
            description: invalid input

  /Player/basicInfoByPosition/{playerName}/{positionName}:
    get:
        tags:
        - player
        summary: player by position details show on screen
        description: all users can watch details
        # operationId: PlayerDetails
        parameters:
        - name: playerName
          in: path
          description: name for get player's basic details
          required: true
          schema:
            type: string
        - name: positionName
          in: path
          description: name of position 
          required: true
          schema:
            type: string    
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref : '#/components/schemas/Player'
          '204':
            description: No Content         
          '400':
            description: invalid input

  
  /Game/basicInfo/{gameID}:
    get:
      tags:
      - Game
      summary: game details show on screen
      description: all users can watch details
      operationId: GameDetails
      parameters:
      - name: gameID
        in: path
        description: id for get game's basic details
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : '#/components/schemas/Game'
        '400':
          description: invalid input

  /Game/basicInfo: 
    get:
      tags:
      - Game
      summary: game details show on screen
      description: all users can watch details
      operationId: GameDetails
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/Game'
        '400':
          description: invalid input            
    post:
      tags:
      - Game
      summary: game added to system
      description: can only be done by the association represent.
      operationId: addNewGameTosystem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
        description: Inventory item to add      
      responses:
        '201':
          description: A new Game has been added to system
        '400':
          description: wrong input parameters  
    

  ## past game
  /Game/fullInfo/{gameID}:
    get:
      tags:
      - Game
      summary: game details show on screen
      description: all users can watch details
      operationId: OldGameDetails
      parameters:
      - name: gameID
        in: path
        description: id for get game's full details
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/OldGame'
        '400':
          description: invalid input

  /Game/allGame:
    get:
      tags:
      - Game
      summary: game details show on screen
      description: all users can watch details
      operationId: OldGameDetails
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/OldGame'
        '400':
          description: invalid input
          
  /Game/score:
    post:
      tags:
      - Game
      summary: score added to specific game
      description: can only be done by the associate represent.
      operationId: addScoreToGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScoreTOGame"
      responses:
        '201':
          description: score update to game
        '400':
          description: wrong input parameters
  
  /Game/events:
    post:
      tags:
      - Game
      summary: events added to specific game
      description: can only be done by the associate represent.
      operationId: addEventsToGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/event'
      responses:
        '201':
          description: events update to game
        '400':
          description: wrong input parameters          
          
  #search team
  /Team/basicInfoID/{teamID}:
    get:
      tags:
      - Team
      summary: team details show on screen
      description: all users can watch details
      operationId: teamDetails
      parameters:
      - name: teamID
        in: path
        description: id for get team's basic details
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/Team'
        '400':
          description: invalid input
          
  # team page        
  /Team/fullInfo/{teamID}:
    get:
      tags:
      - Team
      summary: team detailes show on screen 
      description: all info of specific team
      operationId: TeamFullDetailes
      parameters:
      - name: teamID
        in: path
        description: id for get game full detailes
        required: true
        schema: 
          type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/TeamFullInfo'
        '400':
          description: invalid input
        '404':
          description: team id isnt exist  
  
  /Team/basicInfoName/{teamName}:
    get:
      tags:
      - Team
      summary: team details show on screen
      description: all users can watch details
      #operationId: teamDetails
      parameters:
      - name: teamName
        in: path
        description: name for get team's basic details
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/Team'
        '204':
          description: No Content       
        '400':
          description: invalid input
components:
  schemas: #update
  # represnt user register
    User:
      type: object
      description: Model containing user info
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: user name contains between 3 to 8 letters only
          example: mickyma
        first_name:
          type: string
          description: user's first name
          example: micky
        last_name:
          type: string
          description: user's last name
          example: maous
        country:
          type: string
          description: user's country
          example: Israel
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password contains between 5 to 10 chars, at least one of them is number and special char
          example: mick@2mini
        email:
          type: string
          pattern: email
          description: user's email
          example: micky@gmail.com
        img:
          type: string
          pattern: URL
          description: URL for the user's image
          example: https://cloudinary.com/mickymaous
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          description: username to loging
          minLength: 3
          maxLength: 8
          example: mickyma
        password:
          type: string
          description: password to login
          minLength: 5
          maxLength: 10
          format: password
          example: mick@2mini 
    Player:
          type: object
          # required:
          #   - playerID
          #   - playername
          #   - teamname
          #   - playerPic
          #   - playerNum
          properties:
            # playerID:
            #   type: string
            #   description: id number
            #   example: '65656'
            playername:
              type: string
              description: fullname of player
              example: leo messi
            teamname:
              type: string
              description: name of the specific team
              example: Barcelona
            playerPic:
              type: string
              format: URL
              description: URL for the player Pic
              example: https://cloudinary.com/messi
            playerPosition:
              type: string
              description: player number
              example: nine    
    PlayerFullInfo:
      type: object
      # required:
      #   - player
      #   - age
      properties:
        playername:
          type: string
          description: fullname of player
          example: leo messi
        teamname:
          type: string
          description: name of the specific team
          example: Barcelona
        playerPic:
          type: string
          format: URL
          description: URL for the player Pic
          example: https://cloudinary.com/messi
        playerPosition:
          type: string
          description: player number
          example: nine
        commanName:
          type: string
          description: player comman name
          example: J. Forrest
        nationality:          
          type: string
          description: player nationality
          example: Scotland  
        birthcountry:
          type: string
          description: player birth country
          example: Scotland
        height:
          type: string
          description: player height
          example: 175 cm
        weight:
          type: string
          description: player weight
          example: 80 kg


  
  # uses for represent favorities teams & add new team to favorities       

    Team:
      type: object
      required:
        # - teamID
        - teamname
        - teamLogo
      properties:
        # teamID:
        #   type: string
        #   description: id number
        #   example: '65656'
        teamname:
          type: string
          description: name of the specific team
          example: Barcelona
        teamLogo:
          type: string
          format: URL
          description: URL for the team logo image
          example: https://cloudinary.com/barca  
    TeamFullInfo:
      type: object
      # required: 
      #   - teamPlayers
      #   - coach
      #   - lastGames
      #   - futureGame
      properties:
        teamname:
          type: string
          description: name of the specific team
          example: Barcelona
        teamPlayer:
          type: array
          description: all team's players
          items:
            type: object
            $ref : '#/components/schemas/Player'
        # coach:
        #   $ref: '#/components/schemas/Coach'
        lastGames:
          type: array
          items:
            $ref: '#/components/schemas/OldGame'
        futureGame:
          type: array
          items:
            $ref: '#/components/schemas/Game'
                   
    Game:
      type: object
      # required:
      #   - gameDate
      #   - gameTime
      #   - homeTeam
      #   - awayTeam
      #   - field
      properties:
        date:
          type: string
          format: date
          example: '2011-08-08'
          description : date of game
        time:
          type: string
          format: time
          example: '09:09:09'
          description : time of game
        home_team_name:
          type: string
          example: Midtjylland
        away_team_name:
          type: string
          example: København
        field_name:
          type: string
          example: Meadowbank Dorking
        referee:
          type: string
          example: pini 

    OldGame:
      type: object
      # required:
      #   - game
      #   - score
      #   - events 
      properties:
        date:
          type: string
          format: date
          example: '2011-08-08'
          description : date of game
        time:
          type: string
          format: time
          example: '09:09:09'
          description : time of game
        home_team_name:
          type: string
          example: Midtjylland
        away_team_name:
          type: string
          example: København
        field_name:
          type: string
          example: Meadowbank Dorking
        gaol_home:
          type: integer
          example: 2
        goal_away:
          type: integer
          example: 1
        referee:
          type: string
          example: pini 
        events:
          type: array
          items:
            $ref: '#/components/schemas/event'
    ScoreTOGame:
      type: object
      properties: 
        game_id:
          type: integer
          example: 1
          description : id of the game
        goal_home:
          type: integer
          example: 3
          description : nuber off gaol's home team 
        goal_away:
          type: integer
          example: 1
          description : nuber off gaol's away team        
    LeagueItems:
      type: object
      # required:
      #   - leaguename
      #   - season
      #   - stage
      #   - nextgamedetails
      properties:
        leaguename:
          type: string
          description : the current league
          example: super league
        season:
          type: string
          description: current season name
          example: "2020/2021"
        stage:
          type: string
          description: current stage name
          example: Championship round
        nextgamedetails:
          $ref: '#/components/schemas/Game'
          
        

    event:
      type: object
      properties:
        gameID:
          type: integer
          example: 1
          description : id of game
        date:
          type: string
          format: date
          example: '2011-08-08'
          description : date of game
        time:
          type: string
          format: time
          example: '09:09:09'
          description : time of event 
        minAtGame:
          type: integer
          example: 40
          description: specific min
        eventName:
          type: string
          example: faul
        player1:
          type: string
          example: ronaldo
        player2:
          type: string
          example: shimon gershon
